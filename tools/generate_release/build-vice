#! /bin/bash

HOMEDIR=/home/trikalio/vice-test
VICECOPY=mail:attach/vice/
MAILCOPY=mail:
CHANGELOG_WHO="Spiro Trikaliotis  <spiro.trikaliotis@gmx.de>"
AUTHORSFILE=~/cbm/authors.svn2cl

PROGRAMVERSION=0.1
PROGRAMNAME=`basename $0`

FILE_PREVIOUS_VERSION=.build-vice.previous_version

OLDEST_REVISION_FOR_CHANGELOG=22740

if [ ! -e $HOMEDIR ]; then
	mkdir $HOMEDIR
fi

if [ ! -d $HOMEDIR ]; then
	echo Could not generate $HOMEDIR; does it already exist as a file?
	exit 1
fi

preparebuild() {
	./autogen.sh

	./configure --prefix=$HOMEDIR/usr --infodir=$HOMEDIR/usr/share/info --mandir=$HOMEDIR/usr/share/man --enable-gnomeui --enable-ethernet --enable-fullscreen --enable-parsid --with-midas --without-xaw3d --enable-memmap
}

getversion() {
	VER_MAJOR=`cat configure.in|sed -ne "s/^VICE_VERSION_MAJOR=\([0-9]*\)/\1/p"`
	VER_MINOR=`cat configure.in|sed -ne "s/^VICE_VERSION_MINOR=\([0-9]*\)/\1/p"`
	VER_BUILD=`cat configure.in|sed -ne "s/^VICE_VERSION_BUILD=\([0-9]*\)/\1/p"`

	if [ "$VER_BUILD" == "0" ]; then
		VERSION=$VER_MAJOR.$VER_MINOR
	else
		VERSION=$VER_MAJOR.$VER_MINOR.$VER_BUILD
	fi

	echo "VERSION = $VERSION, MAJOR = $VER_MAJOR, MINOR = $VER_MINOR, BUILD = $VER_BUILD"
}

nextversion() {

	getversion

	PREVIOUS_VERSION=$VERSION

	echo PREVIOUS_VERSION=$PREVIOUS_VERSION > $FILE_PREVIOUS_VERSION

	VER_MAJOR_NEW=$VER_MAJOR
	VER_MINOR_NEW=$VER_MINOR
 	VER_BUILD_NEW=$(($VER_BUILD + 1))

	if test ! -z "$1"; then
		VER_MAJOR_NEW=$1
		VER_MINOR_NEW=0
		VER_BUILD_NEW=0
	fi

	if test ! -z "$2"; then
		VER_MINOR_NEW=$2
		VER_BUILD_NEW=0
	fi

	if test ! -z "$3"; then
		VER_BUILD_NEW=$3
	fi

	echo New version:
	echo "VERSION: MAJOR = $VER_MAJOR_NEW, MINOR = $VER_MINOR_NEW, BUILD = $VER_BUILD_NEW"

	if [ $VER_MAJOR != $VER_MAJOR_NEW ]; then
		sed -i "s/^VICE_VERSION_MAJOR=$VER_MAJOR/VICE_VERSION_MAJOR=$VER_MAJOR_NEW/" configure.in
	fi

	if [ $VER_MINOR != $VER_MINOR_NEW ]; then
		sed -i "s/^VICE_VERSION_MINOR=$VER_MINOR/VICE_VERSION_MINOR=$VER_MINOR_NEW/" configure.in
	fi

	if [ $VER_BUILD != $VER_BUILD_NEW ]; then
		sed -i "s/^VICE_VERSION_BUILD=$VER_BUILD/VICE_VERSION_BUILD=$VER_BUILD_NEW/" configure.in
	fi
}

nextversion2() {
	echo version 2: $1

	getversion

	VER1=`echo $1|sed -ne "s/^\([0-9]\)*.*/\1/p"`
	VER2=`echo $1|sed -ne "s/^[0-9]*\.\([0-9]\)*.*/\1/p"`
	VER3=`echo $1|sed -ne "s/^[0-9]*\.[0-9]*\.\([0-9]\)*.*/\1/p"`

	nextversion $VER1 $VER2 $VER3
}

version() {
	echo $PROGRAMNAME version $PROGRAMVERSION
}

usage() {
	echo "usage: $PROGRAMNAME [options]"
	echo
	echo "with options one of:"
	echo 
	echo "-h, --help:     this help screen"
	echo "--version:      output version number"
	echo "--increment:    increment build number"
	echo "--setver A.B.C: set the version number and build number to A.B.C"
	echo "--commit:       commit the build to the svn"
	echo "--upload:       upload files"
	echo "--mail:         mail new version message"
	echo "--release:      short for --increment, --upload and --mail"
	echo "--win:          build the win32 version"
	echo "--changelogonly only fix the ChangeLog, then stop."
	echo "--preparebuildonly only prepare build (autogen and configure), then stop"
}

process_commandline() {
	DO_COMMIT=0
	DO_UPLOAD=0
	DO_MAIL=0
	DO_BUILDWIN=0
	DO_GEN_CHANGELOG=1
	DO_NOT_COMPILE=0
	DO_PREPARE_BUILD_ONLY=0

	TEMP=$(getopt -a -s bash \
	       -o h \
	       --long help,version,increment,commit,upload,mail,release,setver:,win,changelogonly,preparebuildonly \
	       -n "$PROGRAMNAME" -- "$@")
	eval set -- $TEMP

	while true ; do
	    case "$1" in
		-h|--help)   usage;   exit 0  ;   shift   ;;
		--version)   version; exit 0  ;   shift   ;;
		--increment) nextversion;         shift   ;;
		--commit)    DO_COMMIT=1;         shift   ;;
		--upload)    DO_UPLOAD=1;         shift   ;;
		--mail)      DO_MAIL=1;           shift   ;;
		--release)   nextversion; DO_COMMIT=1; DO_UPLOAD=1; DO_MAIL=1; shift   ;;
		--setver)    nextversion2 "$2";   shift 2 ;;
		--win)       DO_BUILDWIN=1;       shift   ;;
		--changelogonly) DO_GEN_CHANGELOG=1; DO_NOT_COMPILE=1; shift ;;
		--preparebuildonly) DO_PREPARE_BUILD_ONLY=1; DO_NOT_COMPILE=1; shift ;;

		--) shift ; break ;;
		 *) echo >&2 "Internal error! ($1)"
		    usage; exit 1 ;;
	    esac
	done
}

generate_changelog() {
#	if [ ! -e ChangeLog ]; then
		svn2cl --authors=$AUTHORSFILE --group-by-day --separate-daylogs --reparagraph --linelen=72 --stdout -r HEAD:$OLDEST_REVISION_FOR_CHANGELOG $VICESVN/trunk/vice > /tmp/ChangeLog.vice.svn.new
		vim /tmp/ChangeLog.vice.svn.new ChangeLog
		rm /tmp/ChangeLog.vice.svn.new
#	fi
}

makedistbuild() {
	(
		preparebuild > out 2> out.2

		make >> out 2>> out.2
		make install >> out 2>> out.2

		make dist >> out 2>> out.2
	)
}

do_commit() {
	getversion

	TMPFILE=`mktemp` || exit 1
	echo "`date +%Y-%m-%d`  $CHANGELOG_WHO" >> $TMPFILE
	echo "" >> $TMPFILE
	echo "	* Version $VERSION" >> $TMPFILE
	echo "" >> $TMPFILE

	# Add the new ChangeLog entry at the beginning...

	cat $TMPFILE ChangeLog > ChangeLog.tmp
	mv ChangeLog.tmp ChangeLog

	svn commit --message "Version $VERSION"

	svn copy $VICESVN/trunk $VICESVN/tags/v$VER_MAJOR.$VER_MINOR/v$VERSION --message "Tagged version v$VERSION."
	rm $TMPFILE
	[ -e $FILE_PREVIOUS_VERSION ] && rm $FILE_PREVIOUS_VERSION
}

makediff() {
	getversion

	DIFFFILETMP=vice-$PREVIOUS_VERSION-$VERSION.diff
	DIFFFILE=vice-$PREVIOUS_VERSION-$VERSION.diff.gz
	TARFILE=vice-$VERSION.tar.gz

	if [ ! -e ../$DIFFFILE ]; then
	(
		if [ -e $TARFILE ]; then
			mv $TARFILE ..
		fi

		cd ..
		tar xzf $TARFILE
		diff -urN vice-$PREVIOUS_VERSION/ vice-$VERSION/|gzip -9c > $DIFFFILE
	)
	fi
}

do_upload() {
	getversion

	makediff

	(
		cd ..

		md5sum $DIFFFILE $TARFILE > ~/cbm/md5.vice
		scp -p $DIFFFILE $TARFILE $VICECOPY

		ftp -p viceteam.org <<EOF
binary
put $DIFFFILE
put $TARFILE
quit
EOF
	)
}

do_mail() {
	getversion

	makediff

	(
		cd ..
		TMPFILE=`mktemp` || exit 1
		TMPFILE2=`mktemp` || exit 1
		TMPPOSTPONE=`mktemp` || exit 1

		echo -e "Hello,\n\nfind attached the latest.\n\n$ md5sum $TARFILE $DIFFFILE" >> $TMPFILE

		md5sum $TARFILE $DIFFFILE >> $TMPFILE

		echo -e "\nRegards,\nSpiro.\n\n-- \nSpiro R. Trikaliotis                              http://opencbm.sf.net/\nhttp://www.trikaliotis.net/                     http://www.viceteam.org/" >> $TMPFILE

		echo -e "my_hdr From: Spiro Trikaliotis <vice@trikaliotis.net>\nset postponed=$TMPPOSTPONE\nset pgp_autosign=yes\nset pgp_sign_as=\"0x2AF47E44\"" >> $TMPFILE2

		mutt -F $TMPFILE2 -s "vice-$PREVIOUS_VERSION-$VERSION.diff" -a $DIFFFILE -i $TMPFILE -- vice-devel@firenze.linux.it

		if [ -s $TMPPOSTPONE ]; then
			# the mail has been postponed, copy it over to the other machine!
			scp $TMPPOSTPONE $MAILCOPY\postponed.new
			ssh mail "cat postponed.new >> postponed"
		fi

		rm $TMPFILE $TMPFILE2 $TMPPOSTPONE
	)
}


#svn revert -R .
#svnpurge

process_commandline "$@"

if [ -e $FILE_PREVIOUS_VERSION ]; then
	source $FILE_PREVIOUS_VERSION
fi

if [ "$DO_GEN_CHANGELOG" == "1" ]; then
	generate_changelog
fi

if [ "$DO_PREPARE_BUILD_ONLY" == "1" ]; then
	preparebuild > out 2> out.2
fi

if [ "$DO_NOT_COMPILE" == "1" ]; then
	echo "Should not compile, aborting..."
	exit 1
fi

if [ "$DO_BUILDWIN" == "1" ]; then

	if [ ! -e configure ]; then
		./autogen.sh
	fi

	cp -pr ~/mingw32-vice/* build/mingw32/

	(
		cd build/mingw32/mingw32-3.4.2-20040916-1/lib/gcc/i386-mingw32msvc/3.4.2/
		tar xzf ../../../../../mingw-dx9devel.tar.gz
		mv lib/* ../../../../i386-mingw32msvc/lib/
		rmdir lib
	)

	cd build/mingw32
	./build-cross.sh > out.cross 2> out.cross.2

	exit 0
fi

makedistbuild

if [ "$DO_COMMIT" == "1" ]; then
	do_commit
fi

if [ "$DO_UPLOAD" == "1" ]; then
	do_upload
fi

if [ "$DO_MAIL" == "1" ]; then
	do_mail
fi
